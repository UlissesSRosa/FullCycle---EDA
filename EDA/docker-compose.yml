version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  postgres_wallet:
    image: postgres:latest
    environment:
      POSTGRES_DB: wallet
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      retries: 5
    volumes:
      - wallet_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  postgres_balance:
    image: postgres:latest
    environment:
      POSTGRES_DB: balance
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      retries: 5
    volumes:
      - balance_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  wallet-core:
    build:
      context: .
      dockerfile: wallet-core/Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      postgres_wallet:
        condition: service_healthy
      kafka:
        condition: service_started

  balance-service:
    build:
      context: .
      dockerfile: balance-service/Dockerfile
    ports:
      - "3003:3003"
    depends_on:
      postgres_balance:
        condition: service_healthy
      kafka:
        condition: service_started

volumes:
  wallet_data:
  balance_data:
